- name: Deploy Finance Project
  hosts: test
  become: true
  tasks:
    - name: Pull the latest Docker image
      community.docker.docker_image:
        name: faiyazluck/finance-me-service:latest
        source: pull
        force_source: yes

    - name: Stop and remove old container (if exists)
      community.docker.docker_container:
        name: finance-service
        state: absent  # Ensures the container is removed if it exists

    - name: Run the new container
      community.docker.docker_container:
        name: finance-service
        image: faiyazluck/finance-me-service:latest
        state: started
        restart_policy: always
        ports:
          - "80:8080"

    - name: Get the latest Prometheus release version (only v2.x.x)
      uri:
        url: "https://api.github.com/repos/prometheus/prometheus/releases"
        return_content: yes
      register: prometheus_releases

    - name: Filter latest stable v2 release
      set_fact:
        prometheus_version: "{{ prometheus_releases.json | selectattr('tag_name', 'search', '^v2\\.') | map(attribute='tag_name') | list | first | regex_replace('^v', '') }}"

    - name: Debug Prometheus version
      debug:
        msg: "Selected Prometheus version: {{ prometheus_version }}"

    - name: Download Prometheus
      get_url:
        url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}-linux-amd64.tar.gz"
        dest: "/tmp/prometheus.tar.gz"




    - name: Extract Prometheus
      ansible.builtin.unarchive:
        src: "/tmp/prometheus.tar.gz"
        dest: "/opt/"
        remote_src: yes

    - name: Move Prometheus binaries
      command: mv /opt/prometheus-*/prometheus /usr/local/bin/
    
    - name: Move Prometheus config
      command: mv /opt/prometheus-*/prometheus.yml /etc/prometheus.yml
    
    - name: Create Prometheus service file
      copy:
        dest: /etc/systemd/system/prometheus.service
        content: |
          [Unit]
          Description=Prometheus
          Wants=network-online.target
          After=network-online.target

          [Service]
          User=root
          ExecStart=/usr/local/bin/prometheus --config.file=/etc/prometheus.yml --storage.tsdb.path=/var/lib/prometheus
          Restart=always

          [Install]
          WantedBy=multi-user.target

    - name: Start Prometheus service
      systemd:
        name: prometheus
        enabled: yes
        state: started

    # --------------------- GRAFANA INSTALLATION ---------------------
    - name: Install Grafana
      apt:
        name: grafana
        state: present
        update_cache: yes

    - name: Start Grafana service
      systemd:
        name: grafana-server
        enabled: yes
        state: started
