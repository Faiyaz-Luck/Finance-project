---
- name: Deploy Finance Project
  hosts: test
  become: true
  tasks:
    # ----------- Pull and Run Finance Service in Docker ----------- #
    - name: Pull the latest Docker image
      community.docker.docker_image:
        name: faiyazluck/finance-me-service:latest
        source: pull
        force_source: yes

    - name: Stop and remove old container (if exists)
      community.docker.docker_container:
        name: finance-service
        state: absent

    - name: Run the new container
      community.docker.docker_container:
        name: finance-service
        image: faiyazluck/finance-me-service:latest
        state: started
        restart_policy: always
        ports:
          - "80:8080"

    # ----------- Install Prometheus ----------- #
    - name: Install jq (if not installed)
      ansible.builtin.apt:
        name: jq
        state: present
      become: true

    - name: Set Prometheus latest version dynamically
      shell: >
        curl -s https://api.github.com/repos/prometheus/prometheus/releases/latest |
        jq -r '.tag_name' | sed 's/^v//'
      register: prometheus_version
      changed_when: false

    - name: Set Prometheus download URL (ARM64)
      set_fact:
        prometheus_download_url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version.stdout }}/prometheus-{{ prometheus_version.stdout }}.linux-arm64.tar.gz"

    - name: Download Prometheus (ARM64)
      get_url:
        url: "{{ prometheus_download_url }}"
        dest: "/tmp/prometheus.tar.gz"

    - name: Extract Prometheus
      ansible.builtin.unarchive:
        src: "/tmp/prometheus.tar.gz"
        dest: "/opt/"
        remote_src: yes

    - name: Copy Prometheus binary
      copy:
        src: "/opt/prometheus-{{ prometheus_version.stdout }}.linux-arm64/prometheus"
        dest: "/usr/local/bin/prometheus"
        remote_src: yes
        mode: '0755'

    - name: Ensure Prometheus data directory exists
      file:
        path: /var/lib/prometheus
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Copy Prometheus config
      copy:
        src: "/opt/prometheus-{{ prometheus_version.stdout }}.linux-arm64/prometheus.yml"
        dest: "/etc/prometheus.yml"
        remote_src: yes

    - name: Reload systemd and start Prometheus service
      systemd:
        daemon_reload: yes
        name: prometheus
        enabled: yes
        state: started

    # ----------- Install Grafana ----------- #
    - name: Add Grafana APT repository key
      ansible.builtin.apt_key:
        url: https://packages.grafana.com/gpg.key
        state: present

    - name: Add Grafana repository
      ansible.builtin.apt_repository:
        repo: "deb https://packages.grafana.com/oss/deb stable main"
        state: present
        filename: grafana

    - name: Update package cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Grafana
      ansible.builtin.apt:
        name: grafana
        state: present

    - name: Start Grafana service
      ansible.builtin.systemd:
        name: grafana-server
        enabled: yes
        state: started

    # ----------- Open Firewall for Grafana & Prometheus ----------- #
    - name: Allow HTTP traffic for Prometheus & Grafana
      ansible.builtin.ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop:
        - 9090  # Prometheus
        - 3000  # Grafana

    - name: Enable UFW (if not already enabled)
      ansible.builtin.ufw:
        state: enabled


# ----------- Install Node Exporter on Test Server ----------- #
- name: Install Node Exporter on test server
  hosts: test
  become: true
  tasks:
    - name: Download Node Exporter
      get_url:
        url: https://github.com/prometheus/node_exporter/releases/download/v1.3.1/node_exporter-1.3.1.linux-amd64.tar.gz
        dest: /tmp/node_exporter.tar.gz

    - name: Extract Node Exporter
      unarchive:
        src: /tmp/node_exporter.tar.gz
        dest: /opt/
        remote_src: yes

    - name: Move Node Exporter binary to /usr/local/bin
      ansible.builtin.shell: |
        mv /opt/node_exporter-1.3.1.linux-amd64/node_exporter /usr/local/bin/node_exporter
        chmod 755 /usr/local/bin/node_exporter

    - name: Create node_exporter systemd service
      copy:
        dest: /etc/systemd/system/node_exporter.service
        content: |
          [Unit]
          Description=Node Exporter
          After=network.target

          [Service]
          ExecStart=/usr/local/bin/node_exporter
          User=nobody
          Restart=always

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Enable and start Node Exporter service
      systemd:
        name: node_exporter
        enabled: yes
        state: started
